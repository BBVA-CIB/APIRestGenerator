## Operation identifier
#set($operationId        = ${outputLanguageOperations.getOperationId(${pathValue}, ${pathOperation})})
##
##
## Return type
#set($returnType         = ${outputLanguageItems.getOutboundServerItemType(${pathValue}, ${pathOperation})})
#set($returnTypeField    = ${outputLanguageItems.getFullTypeOutput($returnType.item)})
##
##
## Output parameters
#set($outputParameters 	 = ${outputLanguageParameters.generateAllOutputParameters(${pathValue}, ${pathOperation})})
##
##
##
## Produces and consumes
#set($consumes		     = ${outputLanguageConsumesProduces.generateInboundServerContentType(${pathValue}, ${pathOperation})})
#set($produces		     = ${outputLanguageConsumesProduces.generateOutboundServerContentType(${pathValue}, ${pathOperation})})
##
##
#parse(${MethodCommentsJavaTemplate})
	@Override
	@RequestMapping(method = RequestMethod.${pathOperation}, value = "${pathValue}"#if($consumes), consumes = ${consumes}#end#if($produces), produces = ${produces}#end)
	public #if (${returnTypeField} == "byte[]")ResponseEntity<InputStreamResource> #else${returnTypeField} #end${operationId}(${outputParameters.getParametersHeaderRest()})
	{
#if (${returnTypeField} == "void")
		this.restListener.${operationId}(${outputParameters.getParametersCall()}) ;
#elseif (${returnTypeField} == "byte[]")
		return ResponseEntity.ok().body(new InputStreamResource(new ByteArrayInputStream(this.restListener.${operationId}(${outputParameters.getParametersCall()})))) ;
#else
		return this.restListener.${operationId}(${outputParameters.getParametersCall()}) ;
#end
	}

