/*********************************************************************************************************************************
 This class has been automatically generated using KLTT-APIRestGenerator project, don't do manual file modifications.
 ${now}

 "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements;
  and to You under the Apache License, Version 2.0. "
**********************************************************************************************************************************/

## Class Comments
#if (! $classDescription)
/**
 * No description for the module
 */
#else
/** 
 * $classDescription
 */
#end
module ${moduleName}
{
##
## Class definition
    export class ${className}
    {
##
##
## Setting the common parameters
##
#set($formattedAttrName  		= ${outputLanguageNaming.prefixAttributeName(${attributeRef})})
#set($formattedAttrClass 		= ${outputLanguageNaming.prefixClassName(${attributeRef})})
#set($formattedAttrSuffixMethod = ${outputLanguageNaming.suffixMethodName(${attributeRef})})
        /**
         * Public constructor
         */
        constructor(public ${formattedAttrName}: ${formattedAttrClass}) { }

        /**
         * @param ${formattedAttrName} the ${formattedAttrName} to set
         */
        set${formattedAttrSuffixMethod}(${formattedAttrName})
        {
            this.${formattedAttrName} = ${formattedAttrName} ;
        }

        /**
         * @return the ${formattedAttrName}
         */
        get${formattedAttrSuffixMethod}()
        {
            return this.${formattedAttrName} ;
        }

        /**
         * @return the object as string
         */
        toString()
        {
            return JSON.stringify(this, null, 4) ;
        }

        /**
         * @return a new instance of the class with a random values
         */
        static generateRandomInstance()
        {
            var ${formattedAttrName} = ${formattedAttrClass}.generateRandomInstance() ;

            return new ${className}(${formattedAttrName}) ;
        }

        /**
         * @return a random array of this class
         */
        static generateRandomArrayInstance()
        {
            var randomArrayInstance = [] ;

            for(var i=0; i < 5; i++)
            {
                randomArrayInstance[i] = ${className}.generateRandomInstance() ;
            }

            return randomArrayInstance ;
        }

        /**
         * @param value with the json to be parsed
         * @return an instance of this class
         */
        static parse(value)
        {
            var ${formattedAttrName} = ${formattedAttrClass}.parse(value.${formattedAttrName}) ;

            return new ${className}(${formattedAttrName}) ;
        }

        /**
         * @param value with the array of jsons to be parsed
         * @return an array of instances of this class
         */
        static arrayParse(arrayValues)
        {
            var arrayInstances = [] ;

            var arrayValuesLength = arrayValues.length ;
            for(var i=0; i < arrayValuesLength; i++)
            {
                arrayInstances[i] = ${className}.parse(arrayValues[i]) ;
            }

            return arrayInstances ;
        }
    };
}
