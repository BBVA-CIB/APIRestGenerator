swagger: '2.0'
info:
  version: '1.0.0'
  title: Swagger-Petstore-Simple-OSGi
  description: A sample API that uses a petstore as an example to demonstrate features in the swagger-2.0 specification
  termsOfService: http://helloreverb.com/terms/
  contact:
    name: Francisco Manuel Benitez Chico
    email: paco.benitez.chico@gmail.com
    url: http://www.pacobenitezchico.com
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
host: localhost:8081
x-generator-properties:
  business-unit: mybu
  osgi:
    architecture-type: online
    cxf-address: /AddressPetstoreSimple
    cxf-context: /ContextPetstoreSimple
basePath: /api
schemes:
 - http
consumes:

produces:

paths:
  /pets:
    get:
      description: Returns all pets from the system that the user has access to
      operationId: findPets
      produces:
        - application/json
      parameters:
        - name: tags
          in: query
          description: tags to filter by
          required: false
          type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          type: integer
          format: int32
      responses:
        - '200':
            description: pet response
            schema:
              type: array
              items:
                $ref: '#/definitions/pet'
    post:
      description: Creates a new pet in the store.  Duplicates are allowed
      operationId: addPet
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: pet
          in: body
          description: Pet to add to the store
          required: true
          schema:
            $ref: '#/definitions/newPet'
      responses:
        - '200':
            description: pet response
            schema:
              $ref: '#/definitions/pet'
  /pets/{id}:
    get:
      description: Returns a user based on a single ID, if the user does not have access to the pet
      operationId: findPetById
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: ID of pet to fetch
          required: true
          type: integer
          format: int64
      responses:
        - '200':
            description: pet response
            schema:
              $ref: '#/definitions/pet'
    delete:
      description: deletes a single pet based on the ID supplied
      operationId: deletePet
      parameters:
        - name: id
          in: path
          description: ID of pet to delete
          required: true
          type: integer
          format: int64
      responses:
        - '200':
            description: pet deleted      
definitions:
  pet:
    type: object
    required:
      - id
      - petName
    properties:
      id:
        type: integer
        format: int64
      petName:
        type: string
      tag:
        type: string
  newPet:
    type: object
    required:
      - newPetName
    properties:
      id:
        type: integer
        format: int64
      newPetName:
        type: string
      tag:
        type: string
  errorModel:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
