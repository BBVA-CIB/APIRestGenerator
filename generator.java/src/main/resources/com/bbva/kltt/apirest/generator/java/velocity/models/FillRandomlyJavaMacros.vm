##
## -------- One dimension - random generator --------
## @param suffixMethodName   with the suffix method name
## @param isSimpleTypeOneDim true if the type is simple (boolean, integer, long, float or double)
## @param baseTypeOneDim	 with the base type of the item
## @param randomMethodOneDim with the random method
##
#macro(generateOneDimensionFillRandom $suffixMethodName $isSimpleTypeOneDim $baseTypeOneDim $randomMethodOneDim)
#if (${isSimpleTypeOneDim} == "true")
			this.set${suffixMethodName}(${randomMethodOneDim}) ;

#else
			this.set${suffixMethodName}(new ${baseTypeOneDim}()) ;
			this.get${suffixMethodName}().${randomMethodOneDim} ;

#end
#end
##
## -------- Multiple dimensions - Array random generator --------
## @param suffixMethodName	   with the suffix method name get/set_THIS_IS_THE_SUFFIX
## @param isSimpleTypeArray	   true if the type is simple (boolean, integer, long, float, double)
## @param arrayDepth           with the array depth
## @param arrayBaseType		   with the base type for the array
## @param randomMethodArray    with the random method to be filled 
## @param currentRecursiveCall with the current recursive call
##
##
#macro(generateArrayFillRandom $suffixMethodName $isSimpleTypeArray $arrayDepth $arrayBaseType $randomMethodArray $currentRecursiveCall)
#set($arrayDepthStringDef = "") ## ------ STRING - VARIABLE DEFINITION ------
#set($arrayDepthStringIns = "") ## ------ STRING - VARIABLE INSTANTATION ------
#set($arrayDepthStringPos = "") ## ------ STRING - VARIABLE ACCESS AND ASSIGNMENT ------
#foreach($depth in [1..${arrayDepth}])
#set($arrayDepthStringDef = "${arrayDepthStringDef}[]")
#set($arrayDepthStringIns = "${arrayDepthStringIns}[${currentRecursiveCall}]")
#set($arrayDepthStringPos = "${arrayDepthStringPos}[i${depth}]")
#end

			this.set${suffixMethodName}(new ${arrayBaseType}${arrayDepthStringIns}) ;

#foreach($depth in [1..${arrayDepth}])
		#tabsGenerator($depth)for (int i${depth}=0 ; i${depth} < ${currentRecursiveCall} ; i${depth}++)
		#tabsGenerator($depth){
#end
#set($tabNumberCodeGen = ${arrayDepth}+1)
#if (${isSimpleTypeArray} == "true")
		#tabsGenerator(${tabNumberCodeGen})this.get${suffixMethodName}()${arrayDepthStringPos} = ${randomMethodArray} ;
#else
		#tabsGenerator(${tabNumberCodeGen})this.get${suffixMethodName}()${arrayDepthStringPos} = new ${arrayBaseType}() ;
		#tabsGenerator(${tabNumberCodeGen})this.get${suffixMethodName}()${arrayDepthStringPos}.${randomMethodArray} ;
#end
#foreach($depth in [${arrayDepth}..1])
		#tabsGenerator($depth)}
#end
#end