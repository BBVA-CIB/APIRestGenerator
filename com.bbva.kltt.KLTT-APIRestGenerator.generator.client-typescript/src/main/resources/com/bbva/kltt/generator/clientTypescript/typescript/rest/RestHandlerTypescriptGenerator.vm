/*********************************************************************************************************************************
 This class has been automatically generated using KLTT-APIRestGenerator project, don't do manual file modifications.
 ${now}

 "Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements;
  and to You under the Apache License, Version 2.0. "
**********************************************************************************************************************************/

## Common variables for all the generations
##   Host
#set($host         = ${outputLanguageRootValues.getHost()})
## Client Base Path
#set($clientBasePath = ${outputLanguageRootValues.getClientBasePath()})
/**
 * ------------------------------------------------
 * @author Francisco Manuel Benitez Chico
 * ------------------------------------------------
 */
class ${className}
{
    listener: ${restListenerInterfaceName};
    baseURI: string;

	constructor(listener: ${restListenerInterfaceName}, baseURI?: string){
	    this.listener = listener;
	    if (baseURI == null || baseURI == "") {
	        this.baseURI = "${host}";
	    } else {
	        this.baseURI = baseURI;
	    }
	}

	getBaseURI(scheme: string) {
        return scheme + "://" + this.baseURI + "/";
    }

#foreach($pathValue in ${outputLanguagePaths.getPathValues()})
## DELETE
#set($pathOperation = "DELETE")
#if (${outputLanguageOperations.hasAnyOperationId($pathValue, $pathOperation)})
#parse(${RestHandlerMethodHeadersTypescriptTemplate})
#end
## GET
#set($pathOperation = "GET")
#if (${outputLanguageOperations.hasAnyOperationId($pathValue, $pathOperation)})
#parse(${RestHandlerMethodHeadersTypescriptTemplate})
#end
## HEAD
#set($pathOperation = "HEAD")
#if (${outputLanguageOperations.hasAnyOperationId($pathValue, $pathOperation)})
#parse(${RestHandlerMethodHeadersTypescriptTemplate})
#end
## OPTIONS
#set($pathOperation = "OPTIONS")
#if (${outputLanguageOperations.hasAnyOperationId($pathValue, $pathOperation)})
#parse(${RestHandlerMethodHeadersTypescriptTemplate})
#end
## PATCH
#set($pathOperation = "PATCH")
#if (${outputLanguageOperations.hasAnyOperationId($pathValue, $pathOperation)})
#parse(${RestHandlerMethodHeadersTypescriptTemplate})
#end
## POST
#set($pathOperation = "POST")
#if (${outputLanguageOperations.hasAnyOperationId($pathValue, $pathOperation)})
#parse(${RestHandlerMethodHeadersTypescriptTemplate})
#end
## PUT
#set($pathOperation = "PUT")
#if (${outputLanguageOperations.hasAnyOperationId($pathValue, $pathOperation)})
#parse(${RestHandlerMethodHeadersTypescriptTemplate})
#end
#end
}
